# ******************************************************************************************
# FileName     : 02._co2_sensor_oled.py
# Description  : 이산화탄소 농도를 OLED에 표시하기
# Author       : 박은정
# Created Date : 2025.08.07
# Modified     : 
# ******************************************************************************************


import time
from machine import Pin, UART
from ETboard.lib.pin_define import *                     # ETboard 핀 관련 모듈


#===========================================================================================
# 이산화탄소 센서 사용하기
#===========================================================================================
co2_uart = UART(1, baudrate=9600, tx=Pin(D9), rx=Pin(D8))# D6 핀에 센서 연결


#===========================================================================================
# OLED 표시 장치 사용하기
#===========================================================================================
from ETboard.lib.OLED_U8G2 import *
oled = oled_u8g2()


#===========================================================================================
# 전역 변수
#===========================================================================================
co2 = 0
previous_time = 0


#===========================================================================================
def setup():                                             # 응용 프로그램 설정하기
#===========================================================================================
    pass


#===========================================================================================
def loop():                                              # 응용 프로그램 루프
#===========================================================================================
    do_sensing_proces()
    et_short_periodic_process()


#===========================================================================================
def do_sensing_proces():                                 # 센싱 처리
#===========================================================================================
    co2_sensor_update()


#===========================================================================================
def co2_sensor_update():                                 # 이산화탄소 센서 값 업데이트
#===========================================================================================
    global co2

    command = bytes([0xFE, 0x44, 0x00, 0x08, 0x02, 0x9F, 0x25])
    max_retries = 5
    response_timeout = 10

    for _ in range(max_retries):
        co2_uart.write(command)
        time.sleep_ms(50)
        if co2_uart.any():
            break
    else:
        co2 = -55
        return

    timeout_counter = 0
    while co2_uart.any() < 7:
        time.sleep_ms(50)
        timeout_counter += 1
        if timeout_counter > response_timeout:
            while co2_uart.any():
                co2_uart.read(1)
            co2 = -55
            return

    response = co2_uart.read(7)
    if len(response) == 7:
        high = response[3]
        low = response[4]
        co2 = high * 256 + low
    else:
        co2 = -55


#===========================================================================================
def et_short_periodic_process():                         # 짧은 주기 처리                    
#===========================================================================================
    global previous_time

    interval = 1                                         # 1초마다 정보 표시
    now = int(round(time.time()))

    if now - previous_time < interval:                   # 1초가 지나지 않았다면
        return

    previous_time = now
    display_information()
    

#===========================================================================================
# 정보 표시               
#===========================================================================================
def display_information():
    global co2
    string_co2 = "{:d}".format(co2)

    oled.clear()
    oled.setLine(2, 'CO2: ' + string_co2 + 'ppm')        # OLED 모듈 2번 줄에 저장

    oled.display()                                       # 저장된 내용을 oled에 보여줌


#===========================================================================================
# 시작 지점                     
#===========================================================================================
if __name__ == '__main__':
    setup()
    while True:
        loop()


#===========================================================================================
#                                                    
# (주)한국공학기술연구원 http://et.ketri.re.kr       
#
#===========================================================================================
